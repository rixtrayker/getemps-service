{
  "info": {
    "name": "GetEmpStatus API - Complete Collection",
    "description": "Comprehensive Employee Status API testing collection with salary calculations, business logic validation, and automated tests",
    "version": "2.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "üè• Health & Monitoring",
      "item": [
        {
          "name": "Health Check",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Health check returns 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Health check has status field', function () {",
                  "    var response = pm.response.json();",
                  "    pm.expect(response).to.have.property('status');",
                  "});",
                  "",
                  "pm.test('Response time is acceptable', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            }
          }
        }
      ]
    },
    {
      "name": "‚úÖ Successful Scenarios",
      "item": [
        {
          "name": "Employee Status - RED (Average < 2000)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Response status is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has all required fields', function () {",
                  "    var response = pm.response.json();",
                  "    pm.expect(response).to.have.property('id');",
                  "    pm.expect(response).to.have.property('username');",
                  "    pm.expect(response).to.have.property('nationalNumber');",
                  "    pm.expect(response).to.have.property('email');",
                  "    pm.expect(response).to.have.property('phone');",
                  "    pm.expect(response).to.have.property('isActive');",
                  "    pm.expect(response).to.have.property('salaryDetails');",
                  "    pm.expect(response).to.have.property('status');",
                  "    pm.expect(response).to.have.property('lastUpdated');",
                  "});",
                  "",
                  "pm.test('Status is RED for NAT1001', function () {",
                  "    var response = pm.response.json();",
                  "    pm.expect(response.status).to.eql('RED');",
                  "});",
                  "",
                  "pm.test('User is active', function () {",
                  "    var response = pm.response.json();",
                  "    pm.expect(response.isActive).to.be.true;",
                  "});",
                  "",
                  "pm.test('Salary details are present', function () {",
                  "    var response = pm.response.json();",
                  "    pm.expect(response.salaryDetails).to.have.property('averageSalary');",
                  "    pm.expect(response.salaryDetails).to.have.property('highestSalary');",
                  "    pm.expect(response.salaryDetails).to.have.property('sumOfSalaries');",
                  "    pm.expect(response.salaryDetails.averageSalary).to.be.below(2000);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"NationalNumber\": \"NAT1001\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/GetEmpStatus",
              "host": ["{{baseUrl}}"],
              "path": ["api", "GetEmpStatus"]
            }
          }
        },
        {
          "name": "Employee Status - ORANGE (Average = 2000)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Response status is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Status is ORANGE for NAT1002', function () {",
                  "    var response = pm.response.json();",
                  "    pm.expect(response.status).to.eql('ORANGE');",
                  "});",
                  "",
                  "pm.test('Average salary is exactly 2000', function () {",
                  "    var response = pm.response.json();",
                  "    pm.expect(response.salaryDetails.averageSalary).to.eql(2000);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"NationalNumber\": \"NAT1002\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/GetEmpStatus",
              "host": ["{{baseUrl}}"],
              "path": ["api", "GetEmpStatus"]
            }
          }
        },
        {
          "name": "Employee Status - GREEN (Average > 2000)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Response status is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Status is GREEN for NAT1004', function () {",
                  "    var response = pm.response.json();",
                  "    pm.expect(response.status).to.eql('GREEN');",
                  "});",
                  "",
                  "pm.test('Average salary is above 2000', function () {",
                  "    var response = pm.response.json();",
                  "    pm.expect(response.salaryDetails.averageSalary).to.be.above(2000);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"NationalNumber\": \"NAT1004\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/GetEmpStatus",
              "host": ["{{baseUrl}}"],
              "path": ["api", "GetEmpStatus"]
            }
          }
        },
        {
          "name": "Tax Deduction Scenario (NAT1005)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Response status is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('High salary user with tax deduction', function () {",
                  "    var response = pm.response.json();",
                  "    pm.expect(response.status).to.eql('GREEN');",
                  "    pm.expect(response.salaryDetails.sumOfSalaries).to.be.above(10000);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"NationalNumber\": \"NAT1005\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/GetEmpStatus",
              "host": ["{{baseUrl}}"],
              "path": ["api", "GetEmpStatus"]
            }
          }
        },
        {
          "name": "December Bonus Scenario (NAT1006)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Response status is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('December bonus scenario works', function () {",
                  "    var response = pm.response.json();",
                  "    pm.expect(response.nationalNumber).to.eql('NAT1006');",
                  "    pm.expect(response.salaryDetails.averageSalary).to.be.above(0);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"NationalNumber\": \"NAT1006\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/GetEmpStatus",
              "host": ["{{baseUrl}}"],
              "path": ["api", "GetEmpStatus"]
            }
          }
        },
        {
          "name": "Summer Deduction Scenario (NAT1007)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Response status is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Summer deduction scenario works', function () {",
                  "    var response = pm.response.json();",
                  "    pm.expect(response.nationalNumber).to.eql('NAT1007');",
                  "    pm.expect(response.salaryDetails.averageSalary).to.be.above(0);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"NationalNumber\": \"NAT1007\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/GetEmpStatus",
              "host": ["{{baseUrl}}"],
              "path": ["api", "GetEmpStatus"]
            }
          }
        }
      ]
    },
    {
      "name": "‚ùå Error Scenarios",
      "item": [
        {
          "name": "Invalid National Number (404)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Response status is 404', function () {",
                  "    pm.response.to.have.status(404);",
                  "});",
                  "",
                  "pm.test('Error message is correct', function () {",
                  "    var response = pm.response.json();",
                  "    pm.expect(response.error).to.eql('Invalid National Number');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"NationalNumber\": \"NAT9999\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/GetEmpStatus",
              "host": ["{{baseUrl}}"],
              "path": ["api", "GetEmpStatus"]
            }
          }
        },
        {
          "name": "User Not Active (406)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Response status is 406', function () {",
                  "    pm.response.to.have.status(406);",
                  "});",
                  "",
                  "pm.test('Error message is correct', function () {",
                  "    var response = pm.response.json();",
                  "    pm.expect(response.error).to.eql('User is not Active');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"NationalNumber\": \"NAT1003\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/GetEmpStatus",
              "host": ["{{baseUrl}}"],
              "path": ["api", "GetEmpStatus"]
            }
          }
        },
        {
          "name": "Insufficient Data (422)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Response status is 422', function () {",
                  "    pm.response.to.have.status(422);",
                  "});",
                  "",
                  "pm.test('Error message is correct', function () {",
                  "    var response = pm.response.json();",
                  "    pm.expect(response.error).to.eql('INSUFFICIENT_DATA');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"NationalNumber\": \"NAT1011\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/GetEmpStatus",
              "host": ["{{baseUrl}}"],
              "path": ["api", "GetEmpStatus"]
            }
          }
        }
      ]
    },
    {
      "name": "üîç Validation Tests",
      "item": [
        {
          "name": "Invalid Request Format (400)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Response status is 400', function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test('Has error field', function () {",
                  "    var response = pm.response.json();",
                  "    pm.expect(response).to.have.property('error');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"InvalidField\": \"NAT1001\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/GetEmpStatus",
              "host": ["{{baseUrl}}"],
              "path": ["api", "GetEmpStatus"]
            }
          }
        },
        {
          "name": "Empty Request Body (400)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Response status is 400', function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test('Has error field', function () {",
                  "    var response = pm.response.json();",
                  "    pm.expect(response).to.have.property('error');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/GetEmpStatus",
              "host": ["{{baseUrl}}"],
              "path": ["api", "GetEmpStatus"]
            }
          }
        },
        {
          "name": "Malformed JSON (400)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Response status is 400', function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test('Has error field', function () {",
                  "    var response = pm.response.json();",
                  "    pm.expect(response).to.have.property('error');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"NationalNumber\": \"NAT1001\""
            },
            "url": {
              "raw": "{{baseUrl}}/api/GetEmpStatus",
              "host": ["{{baseUrl}}"],
              "path": ["api", "GetEmpStatus"]
            }
          }
        },
        {
          "name": "Empty National Number (400)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Response status is 400', function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test('Has error field', function () {",
                  "    var response = pm.response.json();",
                  "    pm.expect(response).to.have.property('error');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"NationalNumber\": \"\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/GetEmpStatus",
              "host": ["{{baseUrl}}"],
              "path": ["api", "GetEmpStatus"]
            }
          }
        }
      ]
    },
    {
      "name": "üîê Authentication Tests",
      "item": [
        {
          "name": "Valid Request with Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Response status is 200 with valid token', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has employee data', function () {",
                  "    var response = pm.response.json();",
                  "    pm.expect(response).to.have.property('nationalNumber');",
                  "    pm.expect(response.nationalNumber).to.eql('NAT1001');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"NationalNumber\": \"NAT1001\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/GetEmpStatus",
              "host": ["{{baseUrl}}"],
              "path": ["api", "GetEmpStatus"]
            }
          }
        },
        {
          "name": "Request without Token (if auth enabled)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Response status is either 200 (auth disabled) or 401 (auth enabled)', function () {",
                  "    pm.expect([200, 401]).to.include(pm.response.code);",
                  "});",
                  "",
                  "if (pm.response.code === 401) {",
                  "    pm.test('Unauthorized error when auth enabled', function () {",
                  "        var response = pm.response.json();",
                  "        pm.expect(response.error).to.include('Unauthorized');",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"NationalNumber\": \"NAT1001\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/GetEmpStatus",
              "host": ["{{baseUrl}}"],
              "path": ["api", "GetEmpStatus"]
            }
          }
        },
        {
          "name": "Request with Invalid Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Response status is either 200 (auth disabled) or 401 (auth enabled)', function () {",
                  "    pm.expect([200, 401]).to.include(pm.response.code);",
                  "});",
                  "",
                  "if (pm.response.code === 401) {",
                  "    pm.test('Invalid token error when auth enabled', function () {",
                  "        var response = pm.response.json();",
                  "        pm.expect(response.error).to.include('Unauthorized');",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer invalid-token"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"NationalNumber\": \"NAT1001\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/GetEmpStatus",
              "host": ["{{baseUrl}}"],
              "path": ["api", "GetEmpStatus"]
            }
          }
        }
      ]
    },
    {
      "name": "üßÆ Business Logic Validation",
      "item": [
        {
          "name": "Verify Salary Calculations",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Response status is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Salary calculations are consistent', function () {",
                  "    var response = pm.response.json();",
                  "    var details = response.salaryDetails;",
                  "    ",
                  "    // Verify average is calculated correctly",
                  "    pm.expect(details.averageSalary).to.be.a('number');",
                  "    pm.expect(details.highestSalary).to.be.a('number');",
                  "    pm.expect(details.sumOfSalaries).to.be.a('number');",
                  "    ",
                  "    // Highest should be <= sum and >= average",
                  "    pm.expect(details.highestSalary).to.be.at.most(details.sumOfSalaries);",
                  "    pm.expect(details.highestSalary).to.be.at.least(details.averageSalary);",
                  "});",
                  "",
                  "pm.test('Status determination is correct', function () {",
                  "    var response = pm.response.json();",
                  "    var avg = response.salaryDetails.averageSalary;",
                  "    var status = response.status;",
                  "    ",
                  "    if (avg > 2000) {",
                  "        pm.expect(status).to.eql('GREEN');",
                  "    } else if (avg === 2000) {",
                  "        pm.expect(status).to.eql('ORANGE');",
                  "    } else {",
                  "        pm.expect(status).to.eql('RED');",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"NationalNumber\": \"NAT1008\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/GetEmpStatus",
              "host": ["{{baseUrl}}"],
              "path": ["api", "GetEmpStatus"]
            }
          }
        },
        {
          "name": "Verify Data Types and Structure",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Response status is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response structure is correct', function () {",
                  "    var response = pm.response.json();",
                  "    ",
                  "    // Check data types",
                  "    pm.expect(response.id).to.be.a('number');",
                  "    pm.expect(response.username).to.be.a('string');",
                  "    pm.expect(response.nationalNumber).to.be.a('string');",
                  "    pm.expect(response.email).to.be.a('string');",
                  "    pm.expect(response.phone).to.be.a('string');",
                  "    pm.expect(response.isActive).to.be.a('boolean');",
                  "    pm.expect(response.status).to.be.a('string');",
                  "    pm.expect(response.lastUpdated).to.be.a('string');",
                  "    ",
                  "    // Check salary details structure",
                  "    pm.expect(response.salaryDetails.averageSalary).to.be.a('number');",
                  "    pm.expect(response.salaryDetails.highestSalary).to.be.a('number');",
                  "    pm.expect(response.salaryDetails.sumOfSalaries).to.be.a('number');",
                  "});",
                  "",
                  "pm.test('Email format is valid', function () {",
                  "    var response = pm.response.json();",
                  "    var emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;",
                  "    pm.expect(response.email).to.match(emailRegex);",
                  "});",
                  "",
                  "pm.test('Status is valid enum value', function () {",
                  "    var response = pm.response.json();",
                  "    pm.expect(['RED', 'ORANGE', 'GREEN']).to.include(response.status);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"NationalNumber\": \"NAT1009\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/GetEmpStatus",
              "host": ["{{baseUrl}}"],
              "path": ["api", "GetEmpStatus"]
            }
          }
        }
      ]
    },
    {
      "name": "‚ö° Performance Tests",
      "item": [
        {
          "name": "Response Time Test",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Response status is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response time is acceptable', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                  "});",
                  "",
                  "pm.test('Response time is good', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});",
                  "",
                  "pm.test('Response size is reasonable', function () {",
                  "    pm.expect(pm.response.responseSize).to.be.below(10000);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"NationalNumber\": \"NAT1004\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/GetEmpStatus",
              "host": ["{{baseUrl}}"],
              "path": ["api", "GetEmpStatus"]
            }
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set timestamp for requests",
          "pm.globals.set('timestamp', new Date().toISOString());"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test for response headers",
          "pm.test('Response has Content-Type header', function () {",
          "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
          "});",
          "",
          "// Log response time for monitoring",
          "console.log('Response time: ' + pm.response.responseTime + 'ms');",
          "",
          "// Check for common security headers (optional)",
          "if (pm.response.headers.has('X-Frame-Options')) {",
          "    pm.test('X-Frame-Options header is present', function () {",
          "        pm.expect(pm.response.headers.get('X-Frame-Options')).to.be.oneOf(['DENY', 'SAMEORIGIN']);",
          "    });",
          "}"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "demo-token-12345678",
      "type": "string"
    }
  ]
}